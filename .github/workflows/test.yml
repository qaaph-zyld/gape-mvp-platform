name: Test & Quality Assurance

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint
      run: |
        npm run lint
        npm run prettier:check
        
    - name: Type check
      run: npm run type-check
      
    - name: Unit tests
      run: npm run test:ci
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage
        
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  e2e:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Start services
      run: |
        docker-compose up -d
        npm run start:ci
        
    - name: Run Cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        headless: true
        record: true
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        
    - name: Upload Cypress artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-artifacts
        path: |
          cypress/videos
          cypress/screenshots
          
  performance:
    runs-on: ubuntu-latest
    needs: e2e
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install k6
      run: |
        curl https://github.com/loadimpact/k6/releases/download/v0.33.0/k6-v0.33.0-linux64.tar.gz -L | tar xvz --strip-components 1
        
    - name: Start services
      run: docker-compose up -d
      
    - name: Run k6 tests
      run: ./k6 run tests/k6/performance.js
      
    - name: Upload k6 results
      uses: actions/upload-artifact@v3
      with:
        name: k6-results
        path: k6-results
        
  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run SAST
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Run Snyk
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        
    - name: Run npm audit
      run: npm audit
      
  compliance:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check license compliance
      uses: fossas/fossa-action@v1
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}
        
    - name: Run license scan
      run: fossa analyze
      
    - name: Check for vulnerabilities
      run: fossa test
      
  quality-gate:
    runs-on: ubuntu-latest
    needs: [test, e2e, performance, security, compliance]
    
    steps:
    - name: Check quality gate
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.qualitygate.wait=true
