apiVersion: apps/v1
kind: Deployment
metadata:
  name: gape-mvp-backend
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gape-mvp-backend
  template:
    metadata:
      labels:
        app: gape-mvp-backend
    spec:
      containers:
      - name: backend
        image: gape-mvp-backend:latest
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: host
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gape-mvp-frontend
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gape-mvp-frontend
  template:
    metadata:
      labels:
        app: gape-mvp-frontend
    spec:
      containers:
      - name: frontend
        image: gape-mvp-frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        env:
        - name: API_URL
          value: "https://api.gape-mvp.com"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gape-mvp-backend-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gape-mvp-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gape-mvp-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.gape-mvp.com
    secretName: gape-mvp-tls
  rules:
  - host: api.gape-mvp.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gape-mvp-backend
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: gape-mvp-backend
  namespace: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: gape-mvp-backend
---
apiVersion: v1
kind: Service
metadata:
  name: gape-mvp-frontend
  namespace: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: gape-mvp-frontend
